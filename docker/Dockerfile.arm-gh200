# https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda/tags
FROM nvcr.io/nvidia/cuda:12.8.1-devel-ubuntu22.04@sha256:068e9c6a072aba2a5f07618f620ceb8cd1412d6d9e53b46191ab5c797997f46a

# Set environment variables
ENV ACCEPT_EULA="Y"
ENV PYTHON_VERSION=3.10
ENV DOCKERFILE="arm-gh200"
ENV MORPH="ik_6d"
ENV WARP_IK_ROOT=/root/warp-ik
ENV UV_PROJECT_ENVIRONMENT=/root/warp-ik/.venv

# Install UV package manager
COPY --from=ghcr.io/astral-sh/uv:0.5.1 /uv /uvx /bin/

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create directory structure
RUN mkdir -p $WARP_IK_ROOT/{src,data,output,assets,.venv}

# Clone dependencies
RUN git clone https://github.com/TrossenRobotics/trossen_arm_description.git $WARP_IK_ROOT/assets/trossen_arm_description

# Copy source code
COPY src/ $WARP_IK_ROOT/src/

# environment file stores secrets
COPY .env $WARP_IK_ROOT/.env

# Set working directory
WORKDIR $WARP_IK_ROOT

# Create and activate Python virtual environment
RUN uv venv --python $PYTHON_VERSION $UV_PROJECT_ENVIRONMENT

# Install package and dependencies
COPY pyproject.toml $WARP_IK_ROOT/pyproject.toml
RUN . $UV_PROJECT_ENVIRONMENT/bin/activate && \
    uv pip install -e . && \
    uv pip install pytest>=8.3.4

# Install additional requirements
COPY docker/requirements.$DOCKERFILE.txt $WARP_IK_ROOT/requirements.$DOCKERFILE.txt
RUN . $UV_PROJECT_ENVIRONMENT/bin/activate && \
    uv pip install -r requirements.$DOCKERFILE.txt

# Set up environment for GPU access
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics